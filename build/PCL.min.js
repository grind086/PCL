var PCL={VERSION:"1"};PCL.log=function(){console.log.apply(console,arguments)},PCL.warn=function(){console.warn.apply(console,arguments)},PCL.error=function(){console.error.apply(console,arguments)},PCL.Math={},PCL.Math.uuid=function(){var t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("");return function(){for(var e,o=new Array(36),n=0,r=0;36>r;r++)8===r||13===r||18===r||23===r?o[r]="-":14===r?o[r]="4":(2>=n&&(n=33554432+16777216*Math.random()|0),e=15&n,n>>=4,o[r]=t[19===r?3&e|8:e]);return o.join("")}}(),PCL.Math.lerp=function(t,e,o){return t*(1-o)+e*o},PCL.Math.cerp=function(t,e,o,n,r){var i=n-o-(t-e),s=t-e-i,a=o-t,u=e;return u+r*(a+r*(s+r*i))},PCL.Math.clamp=function(t,e,o){return Math.min(o,Math.max(e,t))},PCL.Math.getEasingFunction=function(t){},PCL.BaseNode=function(){this.id=PCL.Math.uuid(),this.type="BaseNode",this.name="",this.inputs=0,this.inputNodes=[],this.parent=null},PCL.BaseNode.prototype={getInput:function(t){return t>this.inputs?void PCL.error("Input index out of range."):this.inputNodes[t]},setInput:function(t,e){return t>this.inputs?void PCL.error("Input index out of range."):e instanceof PCL.BaseNode?(null!==e.parent&&e.parent.removeInput(e),e.parent=this,void(this.inputNodes[t]=e)):void PCL.error("Input is not a PCL node.")},unsetInput:function(t){this.inputNodes[t]&&(this.inputNodes[t].parent=null,this.inputNodes[t]=null)},removeInput:function(t){for(var e=0;e<this.inputs;e++)if(this.inputNodes[e].id===t.id)return void this.unsetInput(e)},getInputValues:function(t){for(var e,o=[],n=0;n<this.inputs;n++)e=this.inputNodes[n],o[n]=e.getValue.apply(e,t);return o},getValue:function(){return 0}},PCL.CombinerNode=function(){PCL.BaseNode.call(this),this.type="CombinerNode",this.inputs=2},PCL.CombinerNode.prototype=Object.create(PCL.BaseNode.prototype),PCL.CombinerNode.constructor=PCL.CombinerNode,PCL.GeneratorNode=function(){PCL.BaseNode.call(this),this.type="GeneratorNode"},PCL.GeneratorNode.prototype=Object.create(PCL.BaseNode.prototype),PCL.GeneratorNode.constructor=PCL.GeneratorNode,PCL.ModifierNode=function(){PCL.BaseNode.call(this),this.type="ModifierNode",this.inputs=1},PCL.ModifierNode.prototype=Object.create(PCL.BaseNode.prototype),PCL.ModifierNode.constructor=PCL.ModifierNode,PCL.SelectorNode=function(){PCL.BaseNode.call(this),this.type="SelectorNode",this.inputs=3,this.easing=PCL.EaseLinear},PCL.SelectorNode.prototype=Object.create(PCL.BaseNode.prototype),PCL.SelectorNode.constructor=PCL.SelectorNode,Object.defineProperty(PCL.SelectorNode.prototype,"easing",{get:function(){return this._easing},set:function(t){this._easing=t,this._easingfn=PCL.Math.getEasingFunction(t)}}),PCL.AddNode=function(){PCL.CombinerNode.call(this),this.name="AddNode"},PCL.AddNode.prototype=Object.create(PCL.CombinerNode.prototype),PCL.AddNode.constructor=PCL.AddNode,PCL.AddNode.prototype.getValue=function(){var t=this.getInputValues(arguments);return t[0]+t[1]},PCL.DivideNode=function(){PCL.CombinerNode.call(this),this.name="DivideNode"},PCL.DivideNode.prototype=Object.create(PCL.CombinerNode.prototype),PCL.DivideNode.constructor=PCL.DivideNode,PCL.DivideNode.prototype.getValue=function(){var t=this.getInputValues(arguments);return t[0]/t[1]},PCL.MaxNode=function(){PCL.CombinerNode.call(this),this.name="MaxNode"},PCL.MaxNode.prototype=Object.create(PCL.CombinerNode.prototype),PCL.MaxNode.constructor=PCL.MaxNode,PCL.MaxNode.prototype.getValue=function(){var t=this.getInputValues(arguments);return Math.max(t[0],t[1])},PCL.MinNode=function(){PCL.CombinerNode.call(this),this.name="MinNode"},PCL.MinNode.prototype=Object.create(PCL.CombinerNode.prototype),PCL.MinNode.constructor=PCL.MinNode,PCL.MinNode.prototype.getValue=function(){var t=this.getInputValues(arguments);return Math.min(t[0],t[1])},PCL.MultiplyNode=function(){PCL.CombinerNode.call(this),this.name="MultiplyNode"},PCL.MultiplyNode.prototype=Object.create(PCL.CombinerNode.prototype),PCL.MultiplyNode.constructor=PCL.MultiplyNode,PCL.MultiplyNode.prototype.getValue=function(){var t=this.getInputValues(arguments);return t[0]*t[1]},PCL.PowerNode=function(){PCL.CombinerNode.call(this),this.name="PowerNode"},PCL.PowerNode.prototype=Object.create(PCL.CombinerNode.prototype),PCL.PowerNode.constructor=PCL.PowerNode,PCL.PowerNode.prototype.getValue=function(){var t=this.getInputValues(arguments);return Math.pow(t[0])},PCL.SubtractNode=function(){PCL.CombinerNode.call(this),this.name="SubtractNode"},PCL.SubtractNode.prototype=Object.create(PCL.CombinerNode.prototype),PCL.SubtractNode.constructor=PCL.SubtractNode,PCL.SubtractNode.prototype.getValue=function(){var t=this.getInputValues(arguments);return t[0]-t[1]},PCL.ArgumentNode=function(){PCL.GeneratorNode.call(this),this.name="ArgumentNode"},PCL.ArgumentNode.prototype=Object.create(PCL.GeneratorNode.prototype),PCL.ArgumentNode.constructor=PCL.ArgumentNode,PCL.ArgumentNode.prototype.getValue=function(t){return t},PCL.ConstantNode=function(){PCL.GeneratorNode.call(this),this.name="ConstantNode",this.value=0},PCL.ConstantNode.prototype=Object.create(PCL.GeneratorNode.prototype),PCL.ConstantNode.constructor=PCL.ConstantNode,PCL.ConstantNode.prototype.getValue=function(){return this.value},PCL.AbsNode=function(){PCL.ModifierNode.call(this),this.name="AbsNode"},PCL.AbsNode.prototype=Object.create(PCL.ModifierNode.prototype),PCL.AbsNode.constructor=PCL.AbsNode,PCL.AbsNode.prototype.getValue=function(){var t=this.getInputValues(arguments);return Math.abs(t[0])},PCL.ClampNode=function(){PCL.ModifierNode.call(this),this.name="ClampNode",this.min=-1,this.max=1},PCL.ClampNode.prototype=Object.create(PCL.ModifierNode.prototype),PCL.ClampNode.constructor=PCL.ClampNode,PCL.ClampNode.prototype.getValue=function(){var t=this.getInputValues(arguments)[0];return PCL.Math.clamp(t,this.min,this.max)},PCL.CurveNode=function(){PCL.ModifierNode.call(this),this.name="CurveNode",this.controlPoints=[]},PCL.CurveNode.prototype=Object.create(PCL.ModifierNode.prototype),PCL.CurveNode.constructor=PCL.CurveNode,PCL.CurveNode.prototype.addControlPoint=function(t,e){for(var o=0;o<this.controlPoints.length;o++)if(t<this.controlPoints[o])return void this.controlPoints.splice(o,0,[t,e]);this.controlPoints.push([t,e])},PCL.CurveNode.prototype.clearControlPoints=function(){this.controlPoints=[]},PCL.CurveNode.prototype.makeControlPoints=function(t){this.clearControlPoints(),t.length<2&&PCL.error("Control point count must be at least 2.");for(var e=2/(t.length-1),o=-1,n=0;n<t.length;n++)this.addControlPoint(o,t[n]),o+=e},PCL.CurveNode.prototype.getValue=function(){var t,e=this.getInputValues(arguments)[0],o=this.controlPoints.length-1;for(t=0;t<this.controlPoints.length&&!(e<this.controlPoints[t][0]);t++);if(1>t)return this.controlPoints[0][1];if(t>o)return this.controlPoints[o][1];var n=this.controlPoints[PCL.Math.clamp(t-2,0,o)],r=this.controlPoints[PCL.Math.clamp(t-1,0,o)],i=this.controlPoints[PCL.Math.clamp(t,0,o)],s=this.controlPoints[PCL.Math.clamp(t+3,0,o)],a=(e-r[0])/(i[0]-r[0]);return PCL.Math.cerp(n[1],r[1],i[1],s[1],a)},PCL.InvertNode=function(){PCL.ModifierNode.call(this),this.name="InvertNode"},PCL.InvertNode.prototype=Object.create(PCL.ModifierNode.prototype),PCL.InvertNode.constructor=PCL.InvertNode,PCL.InvertNode.prototype.getValue=function(){var t=this.getInputValues(arguments);return-1*t[0]},PCL.ScaleBiasNode=function(){PCL.ModifierNode.call(this),this.name="ScaleBiasNode",this.scale=1,this.bias=0},PCL.ScaleBiasNode.prototype=Object.create(PCL.ModifierNode.prototype),PCL.ScaleBiasNode.constructor=PCL.ScaleBiasNode,PCL.ScaleBiasNode.prototype.getValue=function(){var t=this.getInputValues(arguments);return t[0]*this.scale+this.bias},PCL.TerraceNode=function(){PCL.ModifierNode.call(this),this.name="TerraceNode",this.controlPoints=[],this.invert=!1},PCL.TerraceNode.prototype=Object.create(PCL.ModifierNode.prototype),PCL.TerraceNode.constructor=PCL.TerraceNode,PCL.TerraceNode.prototype.addControlPoint=function(t){for(var e=0;e<this.controlPoints.length;e++)if(t<this.controlPoints[e])return void this.controlPoints.splice(e,0,t);this.controlPoints.push(t)},PCL.TerraceNode.prototype.clearControlPoints=function(){this.controlPoints=[]},PCL.TerraceNode.prototype.makeControlPoints=function(t){this.clearControlPoints(),2>t&&PCL.error("Control point count must be at least 2.");for(var e=2/(t-1),o=-1,n=0;t>n;n++)this.addControlPoint(o),o+=e},PCL.TerraceNode.prototype.getValue=function(){var t,e=this.getInputValues(arguments)[0];for(t=0;t<this.controlPoints.length&&!(e<this.controlPoints[t]);t++);if(0===t)return this.controlPoints[0];if(t===this.controlPoints.length)return this.controlPoints[t-1];var o=this.controlPoints[t-1],n=this.controlPoints[t],r=(e-o)/(n-o);if(this.invert){r=1-r;var i=o;o=n,n=i}return PCL.Math.lerp(o,n,r*r)},PCL.BlendNode=function(){PCL.CombinerNode.call(this),this.name="BlendNode"},PCL.BlendNode.prototype=Object.create(PCL.SelectorNode.prototype),PCL.BlendNode.constructor=PCL.BlendNode,PCL.BlendNode.prototype.getValue=function(){this.getInputValues(arguments);return 0},PCL.SelectNode=function(){PCL.CombinerNode.call(this),this.name="SelectNode",this.threshold=0},PCL.SelectNode.prototype=Object.create(PCL.SelectorNode.prototype),PCL.SelectNode.constructor=PCL.SelectNode,PCL.SelectNode.prototype.getValue=function(){var t=this.getInputValues(arguments);return t[2]<this.threshold?t[0]:t[1]};