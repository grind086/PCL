var PCL={VERSION:"1",THREE_AVAILABLE:"undefined"!=typeof THREE};PCL.log=function(){console.log.apply(console,arguments)},PCL.warn=function(){console.warn.apply(console,arguments)},PCL.error=function(){console.error.apply(console,arguments)},PCL.RBGFormat=0,PCL.RGBAFormat=1,PCL.GrayscaleFormat=2,PCL.Math={},PCL.Math.clamp=function(t,e,o){return Math.min(o,Math.max(e,t))},PCL.Math.mod=function(t,e){return(t%e+e)%e},PCL.Math.uuid=function(){var t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("");return function(){for(var e,o=new Array(36),r=0,n=0;36>n;n++)8===n||13===n||18===n||23===n?o[n]="-":14===n?o[n]="4":(2>=r&&(r=33554432+16777216*Math.random()|0),e=15&r,r>>=4,o[n]=t[19===n?3&e|8:e]);return o.join("")}}(),PCL.Math.hashCode=function(t){"string"!=typeof t&&(t=t.toString());var e=0;if(0==t.length)return e;for(var o=0;o<t.length;o++)e=(e<<5)-e+t.charCodeAt(o),e&=e;return e},PCL.Math.getEasingFunction=function(t){},PCL.Math.lerp=function(t,e,o){return t*(1-o)+e*o},PCL.Math.cerp=function(t,e,o,r,n){var i=r-o-(t-e),a=t-e-i,s=o-t,u=e;return u+n*(s+n*(a+n*i))},PCL.Math.LCG=function(){function t(t){void 0===t&&(t=Date.now()),this.setSeed(t)}var e=1664525,o=1013904223,r=Math.pow(2,32);return t.prototype={setSeed:function(t){this.seed="number"==typeof t?t:PCL.Math.hashCode(t),this.xi=this.seed},next:function(){return this.xi=(e*this.xi+o)%r},random:function(){return Math.abs(this.next()/r)}},t}(),PCL.BaseNode=function(){this.id=PCL.Math.uuid(),this.type="BaseNode",this.name="",this.inputs=0,this.inputNodes=[],this.parent=null},PCL.BaseNode.prototype={getInput:function(t){return t>this.inputs?void PCL.error("Input index out of range."):this.inputNodes[t]},setInput:function(t,e){return t>this.inputs?void PCL.error("Input index out of range."):e instanceof PCL.BaseNode?(null!==e.parent&&e.parent.removeInput(e),e.parent=this,void(this.inputNodes[t]=e)):void PCL.error("Input is not a PCL node.")},unsetInput:function(t){this.inputNodes[t]&&(this.inputNodes[t].parent=null,this.inputNodes[t]=null)},removeInput:function(t){for(var e=0;e<this.inputs;e++)if(this.inputNodes[e].id===t.id)return void this.unsetInput(e)},getInputValues:function(t){for(var e,o=[],r=0;r<this.inputs;r++)e=this.inputNodes[r],o[r]=e.getValue.apply(e,t);return o},getValue:function(){return 0}},PCL.CombinerNode=function(){PCL.BaseNode.call(this),this.type="CombinerNode",this.inputs=2},PCL.CombinerNode.prototype=Object.create(PCL.BaseNode.prototype),PCL.CombinerNode.constructor=PCL.CombinerNode,PCL.GeneratorNode=function(){PCL.BaseNode.call(this),this.type="GeneratorNode"},PCL.GeneratorNode.prototype=Object.create(PCL.BaseNode.prototype),PCL.GeneratorNode.constructor=PCL.GeneratorNode,PCL.ModifierNode=function(){PCL.BaseNode.call(this),this.type="ModifierNode",this.inputs=1},PCL.ModifierNode.prototype=Object.create(PCL.BaseNode.prototype),PCL.ModifierNode.constructor=PCL.ModifierNode,PCL.ModifierNode.prototype.getInputValue=function(t){var e=this.inputNodes[0];return e.getValue.apply(e,t)},PCL.SelectorNode=function(){PCL.BaseNode.call(this),this.type="SelectorNode",this.inputs=3,this.easing=PCL.EaseLinear},PCL.SelectorNode.prototype=Object.create(PCL.BaseNode.prototype),PCL.SelectorNode.constructor=PCL.SelectorNode,Object.defineProperty(PCL.SelectorNode.prototype,"easing",{get:function(){return this._easing},set:function(t){this._easing=t,this._easingfn=PCL.Math.getEasingFunction(t)}}),PCL.AddNode=function(){PCL.CombinerNode.call(this),this.name="AddNode"},PCL.AddNode.prototype=Object.create(PCL.CombinerNode.prototype),PCL.AddNode.constructor=PCL.AddNode,PCL.AddNode.prototype.getValue=function(){var t=this.getInputValues(arguments);return t[0]+t[1]},PCL.DivideNode=function(){PCL.CombinerNode.call(this),this.name="DivideNode"},PCL.DivideNode.prototype=Object.create(PCL.CombinerNode.prototype),PCL.DivideNode.constructor=PCL.DivideNode,PCL.DivideNode.prototype.getValue=function(){var t=this.getInputValues(arguments);return t[0]/t[1]},PCL.MaxNode=function(){PCL.CombinerNode.call(this),this.name="MaxNode"},PCL.MaxNode.prototype=Object.create(PCL.CombinerNode.prototype),PCL.MaxNode.constructor=PCL.MaxNode,PCL.MaxNode.prototype.getValue=function(){var t=this.getInputValues(arguments);return Math.max(t[0],t[1])},PCL.MinNode=function(){PCL.CombinerNode.call(this),this.name="MinNode"},PCL.MinNode.prototype=Object.create(PCL.CombinerNode.prototype),PCL.MinNode.constructor=PCL.MinNode,PCL.MinNode.prototype.getValue=function(){var t=this.getInputValues(arguments);return Math.min(t[0],t[1])},PCL.MultiplyNode=function(){PCL.CombinerNode.call(this),this.name="MultiplyNode"},PCL.MultiplyNode.prototype=Object.create(PCL.CombinerNode.prototype),PCL.MultiplyNode.constructor=PCL.MultiplyNode,PCL.MultiplyNode.prototype.getValue=function(){var t=this.getInputValues(arguments);return t[0]*t[1]},PCL.PowerNode=function(){PCL.CombinerNode.call(this),this.name="PowerNode"},PCL.PowerNode.prototype=Object.create(PCL.CombinerNode.prototype),PCL.PowerNode.constructor=PCL.PowerNode,PCL.PowerNode.prototype.getValue=function(){var t=this.getInputValues(arguments);return Math.pow(t[0])},PCL.SubtractNode=function(){PCL.CombinerNode.call(this),this.name="SubtractNode"},PCL.SubtractNode.prototype=Object.create(PCL.CombinerNode.prototype),PCL.SubtractNode.constructor=PCL.SubtractNode,PCL.SubtractNode.prototype.getValue=function(){var t=this.getInputValues(arguments);return t[0]-t[1]},PCL.ArgumentNode=function(){PCL.GeneratorNode.call(this),this.name="ArgumentNode"},PCL.ArgumentNode.prototype=Object.create(PCL.GeneratorNode.prototype),PCL.ArgumentNode.constructor=PCL.ArgumentNode,PCL.ArgumentNode.prototype.getValue=function(t){return t},PCL.CheckerNode=function(){PCL.GeneratorNode.call(this),this.name="CheckerNode"},PCL.CheckerNode.prototype=Object.create(PCL.GeneratorNode.prototype),PCL.CheckerNode.constructor=PCL.CheckerNode,PCL.CheckerNode.prototype.getValue=function(t,e){return 1&(t^e)},PCL.ConstantNode=function(){PCL.GeneratorNode.call(this),this.name="ConstantNode",this.value=0},PCL.ConstantNode.prototype=Object.create(PCL.GeneratorNode.prototype),PCL.ConstantNode.constructor=PCL.ConstantNode,PCL.ConstantNode.prototype.getValue=function(){return this.value},PCL.FunctionNode=function(){PCL.GeneratorNode.call(this),this.name="FunctionNode",this.value=function(){return 0}},PCL.FunctionNode.prototype=Object.create(PCL.GeneratorNode.prototype),PCL.FunctionNode.constructor=PCL.FunctionNode,PCL.FunctionNode.prototype.getValue=function(){return this.value.apply(this,arguments)},PCL.Worley2DNode=function(t){PCL.GeneratorNode.call(this),this.name="Worley2DNode",this.seed=PCL.Math.hashCode(void 0===t?Date.now():t).toString(36).replace(/-/,"A"),this.gridSize=64,this.wrapSize=0,this.distance=this.distanceEuclidean,this._lastGrid=[null,null,null]},PCL.Worley2DNode.prototype=Object.create(PCL.GeneratorNode.prototype),PCL.Worley2DNode.constructor=PCL.Worley2DNode,PCL.Worley2DNode.prototype.probLookup=function(t){return.07525283359435139>t?1:.22575850078305418>t?2:.42643272370132457>t?3:.627106946619595>t?4:.7876463249542113>t?5:.8946725771772888>t?6:.9558304355904759>t?7:.9864093647970694>t?8:9},PCL.Worley2DNode.prototype.distanceEuclidean=function(t,e,o,r){var n=o-t,i=r-e;return Math.sqrt(n*n+i*i)},PCL.Worley2DNode.prototype.distanceManhattan=function(t,e,o,r){var n=o-t,i=r-e;return Math.abs(n)+Math.abs(i)},PCL.Worley2DNode.prototype.getValue=function(t,e){var o=Math.floor(t/this.gridSize),r=Math.floor(e/this.gridSize),n=[];if(this._lastGrid[0]!==o||this._lastGrid[1]!==r){var i,a,s,u,c,d,p,C,h=new PCL.Math.LCG;for(i=o-1;o+2>i;i++)for(a=r-1;r+2>a;a++)for(u=this.wrapSize>0?PCL.Math.hashCode(PCL.Math.mod(i,this.wrapSize).toString()+this.seed+PCL.Math.mod(a,this.wrapSize).toString()):PCL.Math.hashCode(i.toString()+this.seed+a.toString()),h.setSeed(u),c=this.probLookup(h.random()),s=0;c>s;s++)d=(i+h.random())*this.gridSize,p=(a+h.random())*this.gridSize,n.push([d,p]);this._lastGrid=[o,r,n]}else n=this._lastGrid[2];for(var C,l=1/0,s=0;s<n.length;s++)C=this.distance(t,e,n[s][0],n[s][1]),l=Math.min(l,C);return PCL.Math.clamp(l/this.gridSize,0,1)},PCL.AbsNode=function(){PCL.ModifierNode.call(this),this.name="AbsNode"},PCL.AbsNode.prototype=Object.create(PCL.ModifierNode.prototype),PCL.AbsNode.constructor=PCL.AbsNode,PCL.AbsNode.prototype.getValue=function(){return Math.abs(this.getInputValue(arguments))},PCL.ClampNode=function(){PCL.ModifierNode.call(this),this.name="ClampNode",this.min=-1,this.max=1},PCL.ClampNode.prototype=Object.create(PCL.ModifierNode.prototype),PCL.ClampNode.constructor=PCL.ClampNode,PCL.ClampNode.prototype.getValue=function(){return PCL.Math.clamp(this.getInputValue(arguments),this.min,this.max)},PCL.CurveNode=function(){PCL.ModifierNode.call(this),this.name="CurveNode",this.controlPoints=[]},PCL.CurveNode.prototype=Object.create(PCL.ModifierNode.prototype),PCL.CurveNode.constructor=PCL.CurveNode,PCL.CurveNode.prototype.addControlPoint=function(t,e){for(var o=0;o<this.controlPoints.length;o++)if(t<this.controlPoints[o])return void this.controlPoints.splice(o,0,[t,e]);this.controlPoints.push([t,e])},PCL.CurveNode.prototype.clearControlPoints=function(){this.controlPoints=[]},PCL.CurveNode.prototype.makeControlPoints=function(t){this.clearControlPoints(),t.length<2&&PCL.error("Control point count must be at least 2.");for(var e=2/(t.length-1),o=-1,r=0;r<t.length;r++)this.addControlPoint(o,t[r]),o+=e},PCL.CurveNode.prototype.getValue=function(){var t,e=this.getInputValue(arguments),o=this.controlPoints.length-1;for(t=0;t<this.controlPoints.length&&!(e<this.controlPoints[t][0]);t++);if(1>t)return this.controlPoints[0][1];if(t>o)return this.controlPoints[o][1];var r=this.controlPoints[PCL.Math.clamp(t-2,0,o)],n=this.controlPoints[PCL.Math.clamp(t-1,0,o)],i=this.controlPoints[PCL.Math.clamp(t,0,o)],a=this.controlPoints[PCL.Math.clamp(t+3,0,o)],s=(e-n[0])/(i[0]-n[0]);return PCL.Math.cerp(r[1],n[1],i[1],a[1],s)},PCL.FBMNode=function(){PCL.ModifierNode.call(this),this.name="FBMNode",this.octaves=8,this._frequency=2,this._lacunarity=2,this._useArrays=!1,this.frequency=1,this.lacunarity=2,this.amplitude=.5,this.persistence=.5},PCL.FBMNode.prototype=Object.create(PCL.ModifierNode.prototype),PCL.FBMNode.constructor=PCL.FBMNode,Object.defineProperties(PCL.FBMNode.prototype,{frequency:{get:function(){return this._frequency},set:function(t){this._frequency=t,this.updateProperties()}},lacunarity:{get:function(){return this._lacunarity},set:function(t){this._lacunarity=t,this.updateProperties()}}}),PCL.FBMNode.prototype.updateProperties=function(){var t=this.frequency,e=this.lacunarity,o=Math.max(t.length||0,e.length||0);if(0===o)this._frequency=t,this._lacunarity=e,this._useArrays=!1;else{for(var r=new Array(o),n=new Array(o),i=0;o>i;i++)r[i]=t instanceof Array?t[i]:t,n[i]=e instanceof Array?e[i]:e;this._frequency=r,this._lacunarity=n,this._useArrays=!0}},PCL.FBMNode.prototype.getValue=function(){var t,e=0,o=[],r=this._frequency,n=this._lacunarity,i=this.amplitude,a=this.persistence;if(this._useArrays){for(var s=[],u=0;u<arguments.length;u++)void 0!==r[u]&&void 0!==n[u]?(o[u]=arguments[u]*r[u],s[u]=!1):(o[u]=arguments[u],s[u]=!0);for(var u=0;u<this.octaves;u++){t=this.getInputValue(o)*i,e+=t,i*=a;for(var u=0;u<o.length;u++)s[u]||(o[u]*=n[u])}}else{for(var u=0;u<arguments.length;u++)o[u]=arguments[u]*r;for(var u=0;u<this.octaves;u++){t=this.getInputValue(o)*i,e+=t,i*=a;for(var u=0;u<o.length;u++)o[u]*=n}}return e},PCL.InvertNode=function(){PCL.ModifierNode.call(this),this.name="InvertNode"},PCL.InvertNode.prototype=Object.create(PCL.ModifierNode.prototype),PCL.InvertNode.constructor=PCL.InvertNode,PCL.InvertNode.prototype.getValue=function(){return-1*this.getInputValue(arguments)},PCL.ScaleBiasNode=function(){PCL.ModifierNode.call(this),this.name="ScaleBiasNode",this.scale=1,this.bias=0},PCL.ScaleBiasNode.prototype=Object.create(PCL.ModifierNode.prototype),PCL.ScaleBiasNode.constructor=PCL.ScaleBiasNode,PCL.ScaleBiasNode.prototype.getValue=function(){return this.getInputValue(arguments)*this.scale+this.bias},PCL.TerraceNode=function(){PCL.ModifierNode.call(this),this.name="TerraceNode",this.controlPoints=[],this.invert=!1},PCL.TerraceNode.prototype=Object.create(PCL.ModifierNode.prototype),PCL.TerraceNode.constructor=PCL.TerraceNode,PCL.TerraceNode.prototype.addControlPoint=function(t){for(var e=0;e<this.controlPoints.length;e++)if(t<this.controlPoints[e])return void this.controlPoints.splice(e,0,t);this.controlPoints.push(t)},PCL.TerraceNode.prototype.clearControlPoints=function(){this.controlPoints=[]},PCL.TerraceNode.prototype.makeControlPoints=function(t){this.clearControlPoints(),2>t&&PCL.error("Control point count must be at least 2.");for(var e=2/(t-1),o=-1,r=0;t>r;r++)this.addControlPoint(o),o+=e},PCL.TerraceNode.prototype.getValue=function(){var t,e=this.getInputValue(arguments);for(t=0;t<this.controlPoints.length&&!(e<this.controlPoints[t]);t++);if(0===t)return this.controlPoints[0];if(t===this.controlPoints.length)return this.controlPoints[t-1];var o=this.controlPoints[t-1],r=this.controlPoints[t],n=(e-o)/(r-o);if(this.invert){n=1-n;var i=o;o=r,r=i}return PCL.Math.lerp(o,r,n*n)},PCL.BlendNode=function(){PCL.CombinerNode.call(this),this.name="BlendNode"},PCL.BlendNode.prototype=Object.create(PCL.SelectorNode.prototype),PCL.BlendNode.constructor=PCL.BlendNode,PCL.BlendNode.prototype.getValue=function(){this.getInputValues(arguments);return 0},PCL.SelectNode=function(){PCL.CombinerNode.call(this),this.name="SelectNode",this.threshold=0},PCL.SelectNode.prototype=Object.create(PCL.SelectorNode.prototype),PCL.SelectNode.constructor=PCL.SelectNode,PCL.SelectNode.prototype.getValue=function(){var t=this.getInputValues(arguments);return t[2]<this.threshold?t[0]:t[1]};
